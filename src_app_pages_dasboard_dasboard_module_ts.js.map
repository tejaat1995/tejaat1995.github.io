{"version":3,"file":"src_app_pages_dasboard_dasboard_module_ts.js","mappings":"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","sources":["./src/app/pages/dasboard/dasboard-routing.module.ts","./src/app/pages/dasboard/dasboard.module.ts","./src/app/pages/dasboard/dasboard.page.ts","./src/app/services/common/common.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DasboardPage } from './dasboard.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DasboardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DasboardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DasboardPageRoutingModule } from './dasboard-routing.module';\n\nimport { DasboardPage } from './dasboard.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DasboardPageRoutingModule\n  ],\n  declarations: [DasboardPage]\n})\nexport class DasboardPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { CommonService } from 'src/app/services/common/common.service';\nimport { InAppBrowser } from '@awesome-cordova-plugins/in-app-browser/ngx';\n\n@Component({\n  selector: 'app-dasboard',\n  templateUrl: './dasboard.page.html',\n  styleUrls: ['./dasboard.page.scss'],\n})\nexport class DasboardPage implements OnInit {\n\n  public student: any = {};\n\n  constructor(\n    private commonService: CommonService,\n    private authService: AuthService,\n    private router: Router,\n    private iab: InAppBrowser\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.student = JSON.parse(localStorage.getItem('student'));\n  }\n\n  openLink() {\n    const browser = this.iab.create('http://www.gurukulforca.com', '_blank');\n\n    browser.on('loadstop').subscribe(event => {\n      //\n    });\n\n    browser.close();\n  }\n\n  navTo(path: string) {\n    this.commonService.navigateForward(path);\n  }\n\n  logout() {\n    this.authService.logout().then(resp => {\n      localStorage.clear();\n      this.router.navigateByUrl('login', { replaceUrl: true });\n    }, err => {\n      console.error('Error while logout:::::::::\\n', err);\n      this.commonService.presentToast('unable to login', 'danger');\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { NavigationOptions } from '@ionic/angular/providers/nav-controller';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  constructor(\n    private toastCtrl: ToastController,\n    private navCtrl: NavController\n  ) { }\n\n  presentToast(message = 'Please wait...', color = 'primary', duration = 3000) {\n    this.toastCtrl.create({\n      cssClass: '',\n      color,\n      duration,\n      message,\n    }).then(toast => {\n      toast.present();\n    }, err => {\n      console.error('Error while toasting message', err);\n    });\n  }\n\n  isValidData(dataToCheck: any) {\n    return dataToCheck !== undefined && dataToCheck !== null && dataToCheck !== '' && dataToCheck !== [] && Object.keys(dataToCheck).length !== 0;\n  }\n\n  getExtension(url: string) {\n    let type: string = url.split(/[#?]/)[0].split('.').pop().trim();\n    if (['jpg', 'jpeg', 'png', 'gif', 'tiff', 'svg'].includes(type.toLowerCase())) {\n      type = 'image';\n    } else if (['mp3', 'm4a', 'acc', 'ogg', 'wma', 'flac', 'alac'].includes(type.toLowerCase())) {\n      type = 'audio';\n    } else if (['3gp', 'mp4', 'mov', 'wmv', 'flv', 'avi', 'avchd', 'webm', 'mkv'].includes(type.toLowerCase())) {\n      type = 'video';\n    } else if (['zip', 'rar'].includes(type.toLowerCase())) {\n      type = 'archive';\n    }\n    return type.toLowerCase();\n  }\n\n  navigateForward(url: string, state: NavigationOptions = {}) {\n    this.navCtrl.navigateForward(url, { state: { ...state } });\n  }\n\n  navigateBack(url: string, state: NavigationOptions = {}) {\n    this.navCtrl.navigateBack(url, { state: { ...state } });\n  }\n\n  navigateRoot(url: string, state: NavigationOptions = {}) {\n    this.navCtrl.setDirection('root');\n    this.navCtrl.navigateRoot(url, { state: { ...state } });\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}