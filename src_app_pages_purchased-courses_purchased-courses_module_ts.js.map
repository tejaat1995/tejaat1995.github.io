{"version":3,"file":"src_app_pages_purchased-courses_purchased-courses_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAES;AAEhE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yEAAoB;KAChC;CACF,CAAC;IAMW,iCAAiC,SAAjC,iCAAiC;CAAG;AAApC,iCAAiC;IAJ7C,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,iCAAiC,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBL;AACM;AACF;AAEA;AAE0C;AAEvB;IAWnD,0BAA0B,SAA1B,0BAA0B;CAAG;AAA7B,0BAA0B;IATtC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,gGAAiC;SAClC;QACD,YAAY,EAAE,CAAC,yEAAoB,CAAC;KACrC,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnB8B;AACpB;AAEgB;AACM;AACH;AACL;IAOlD,oBAAoB,SAApB,oBAAoB;IAG/B,YACU,WAAwB,EACxB,EAAqB,EACrB,SAA0B,EAC1B,aAA4B,EAC5B,YAA0B,EAC1B,WAAwB;QALxB,gBAAW,GAAX,WAAW,CAAa;QACxB,OAAE,GAAF,EAAE,CAAmB;QACrB,cAAS,GAAT,SAAS,CAAiB;QAC1B,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QAP3B,WAAM,GAAY,EAAE,CAAC;QAS1B,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACpD,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IACR,CAAC;IAED,UAAU,CAAC,MAAa;QACtB,MAAM,UAAU,GAAW;YACzB,EAAE,EAAE,MAAM,EAAE,SAAS;YACrB,KAAK,EAAE,MAAM,EAAE,WAAW;YAC1B,WAAW,EAAE,MAAM,EAAE,WAAW;SACjC,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,iBAAiB,CAAC,CAAC;IACxD,CAAC;CACF;;YApCQ,oEAAW;YANQ,4DAAiB;YACpC,2DAAe;YAGf,iFAAa;YACb,8EAAY;YAFZ,2EAAW;;AAUP,oBAAoB;IALhC,wDAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,8EAA4C;;KAE7C,CAAC;GACW,oBAAoB,CA6BhC;AA7BgC","sources":["./src/app/pages/purchased-courses/purchased-courses-routing.module.ts","./src/app/pages/purchased-courses/purchased-courses.module.ts","./src/app/pages/purchased-courses/purchased-courses.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PurchasedCoursesPage } from './purchased-courses.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PurchasedCoursesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PurchasedCoursesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PurchasedCoursesPageRoutingModule } from './purchased-courses-routing.module';\n\nimport { PurchasedCoursesPage } from './purchased-courses.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PurchasedCoursesPageRoutingModule\n  ],\n  declarations: [PurchasedCoursesPage]\n})\nexport class PurchasedCoursesPageModule {}\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { Course, Order } from 'src/app/models/course.interface';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { CommonService } from 'src/app/services/common/common.service';\nimport { StateService } from 'src/app/services/state/state.service';\nimport { DataService } from '../../services/data/data.service';\n\n@Component({\n  selector: 'app-purchased-courses',\n  templateUrl: './purchased-courses.page.html',\n  styleUrls: ['./purchased-courses.page.scss'],\n})\nexport class PurchasedCoursesPage implements OnInit {\n\n  public orders: Order[] = [];\n  constructor(\n    private dataService: DataService,\n    private cd: ChangeDetectorRef,\n    private alertCtrl: AlertController,\n    private commonService: CommonService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.dataService.getPurchasedOrders().subscribe(res => {\n      this.orders = res;\n      this.cd.detectChanges();\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  openCourse(course: Order) {\n    const courseData: Course = {\n      id: course?.course_id,\n      title: course?.course_name,\n      description: course?.course_desc\n    };\n    this.stateService.setData('course', courseData);\n    this.commonService.navigateForward('purchased-tests');\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}